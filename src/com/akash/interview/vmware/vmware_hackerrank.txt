// Write your code here
        int maxLength = 2000;
        int demo[][] = new int[maxLength][maxLength];
        char xArr[] = x.toCharArray();
        char yArr[] = y.toCharArray();
        int xLen = xArr.length;
        int yLen = yArr.length;
        
        for(int i=0; i<yLen; i++) {
            for(int j=0; j<xLen; j++) {
                demo[i][j] = 0;
            }
        }
        
        for(int i=1; i<= yLen; i++) {
            for(int j=1; j<= xLen; j++) {
                if(xArr[j-1] == yArr[i-1]) {
                    demo[i][j] = demo[i-1][j-1] + 1;
                } else {
                    demo[i][j] = demo[i][j-1];
                }
            }
        }
        
        int result = 0;
        for(int i=1; i<= yLen; i++) {
            result = Math.max(result, demo[i][xLen]);
        }
        return result;
        
        
        
        
=====================


int len = arr.size();
        long inversions = 0l;
        
        for(int i=0; i< len-1; i++) {
            long smaller = 0l;
            for(int j=i+1; j<len; j++) {
                if(arr.get(i).intValue() > arr.get(j).intValue()) {
                    smaller++;
                }
            }
            
            long greater = 0l;
            for(int j=i-1; j >= 0; j--) {
                if(arr.get(i).intValue() < arr.get(j).intValue()) {
                    greater++;
                }
            }
            
            inversions = inversions + smaller * greater;
        }
        return inversions;
        
        
===============

anagram : 

if(str1.length() != str2.length()) {
            return -1;
        }
        
        int count1[] = new int[26];
        int count2[] = new int[26];
        for(int i=0; i< str1.length(); i++) {
            count1[str1.charAt(i)-'a']++;
        }
        for(int i=0; i< str2.length(); i++) {
            count2[str2.charAt(i)-'a']++;
        }
        
        int result = 0;
        for(int i=0; i<26; i++) {
            result = result + Math.abs(count1[i] - count2[i]) ;
        }
        return result/2;
        
==================


